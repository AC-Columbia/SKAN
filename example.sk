/* GCD Algorithm */
int gcd(int a, int b) {
  while (a != b) {
    if (b < a) a = a - b;
    else b = b - a;
  }
  return a;
}

/* Test mod operator */
int mod_test(int x, int y) {
  int z;
  z = 6 mod 5;
  print(z);
  print(4 mod 3);
  return x mod y;
}

/* Test string type and print_str function */
int string_test(string s) {
  string x;
  x = s;
  print_str(x);
  print_str("hi");
  return 0;
}

int main() {
  int x;
  int y;
  x = 2;
  y = 14;
  print(gcd(x,y));

  int a = 9;
  int b = 18;
  print(gcd(a,b));

  print(mod_test(x, y));

  string c;
  c = "hello";
  string_test(c);

  img i2 = load("Lake.jpg");
  dilation(i2, 10, 1);
  save("dilated.png", i2);

  img i3 = load("test_fish.png");
  sobel(i3);
  save("sobel.png", i3);

  img i4 = load("Lake.jpg");
  threshold(i4, 110);
  save("threshold.png", i4);

  img i5 = load("test_fish.png");
  gaussian(i5, 25);
  save("gauss.png", i5);

  img i6 = load("test_fish.png");
  sobel(i6);
  color(i6, 3);
  save("color.png", i6);

  img i7 = load("Lake.jpg");
  color(i7,5);
  save("color2.png", i7);

  cleanup(i2);

  return 0;
}